@model Vidly_Web_Application.Models.Staff

@{
    ViewBag.Title = "Edit";
}

<h2>Update Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Staff</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StaffID)

        <div class="form-group">
            @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffSurname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffSurname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffSurname, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffPhone, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffStreet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffStreet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffStreet, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffCity, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffPostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        @*<div class="form-group">
            @Html.LabelFor(model => model.StaffHireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.StaffHireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffHireDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />*@

        <div class="form-group">
            @Html.LabelFor(model => model.SemesterCode, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SemesterCode", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SemesterCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffOffice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffOffice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffOffice, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffDepartmentCode, "StaffDepartmentCode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StaffDepartmentCode", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StaffDepartmentCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.StaffDesignation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffDesignation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffDesignation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <br />
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
